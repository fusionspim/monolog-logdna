name: "Continuous Integration"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      PHP_CLI_IMAGE: "ghcr.io/fusionspim/monolog-logdna/php-cli:latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Github Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u fusionsbot --password-stdin

      - name: Restore Docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: docker-images-${{ hashFiles('docker/**') }}
          restore-keys: docker-images-

      - name: Restore Composer dependencies
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: php-composer-${{ hashFiles('composer.lock') }}
          restore-keys: php-composer-

      - name: Install Composer dependencies
        run: |
          docker run -t --rm -v "$PWD":/app -w /app ${{ env.PHP_CLI_IMAGE }} \
            composer install --prefer-dist --no-interaction

      - name: Restore PHP CS Fixer defects
        uses: actions/cache@v2
        with:
          path: .php_cs.cache
          key: php-cs-fixer-${{ hashFiles('.php-cs-fixer.dist.php', '.php_cs.cache') }}
          restore-keys: php-cs-fixer-

      - name: Normalise Composer
        run: |
          docker run -t --rm -v "$PWD":/app -w /app ${{ env.PHP_CLI_IMAGE }} \
            composer normalize --dry-run

      - name: Run PHP CS Fixer
        run: |
          docker run -t --rm -v "$PWD":/app -w /app ${{ env.PHP_CLI_IMAGE }} \
            php vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff --verbose --stop-on-violation

      - name: Run unit tests
        shell: bash
        run: |
          docker run -t --rm -v "$PWD":/app -w /app ${{ env.PHP_CLI_IMAGE }} \
            php vendor/bin/phpunit --stop-on-failure
